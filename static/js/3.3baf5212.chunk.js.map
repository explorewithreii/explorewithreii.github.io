{"version":3,"sources":["components/View/index.js","components/View/.module.css","components/Button/.module.css","components/Button/index.js","components/Separator/index.js","components/TextInput/.module.css","components/TextInput/index.js"],"names":["View","children","style","defaultStyle","props","className","styles","view","module","exports","Button","title","titleStyle","skin","onPress","isLoading","disabled","onClick","color","backgroundColor","size","Separator","vertical","horizontal","paddingTop","paddingBottom","paddingLeft","paddingRight","TextInput","status","body","value","onChangeText","isTextEncrypt","onEncryptText","indicatorProgress","indicatorColor","indicatorSize","indicatorThickness","placeholder","prefixIcon","ref","useRef","type","onChange","event","target","suffixPane","String","toLowerCase","includes","buttonEncryptText","name","font","accentColor","thickness","progress"],"mappings":"8NACe,SAASA,EAAT,GAA0D,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,aAAiBC,EAAQ,iBACtE,OACE,6CAAKC,UAAS,UAAKH,EAAL,YAAcI,IAAOC,MAAQL,MAAOC,GAAkBC,GAApE,aACGH,O,mBCHPO,EAAOC,QAAU,CAAC,KAAO,iB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,eAAe,MAAQ,kB,2MCEjC,SAASC,EAAT,GAAoF,IAAnET,EAAkE,EAAlEA,SAAUU,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,UAAcX,EAAQ,iBAChG,OACE,iDAAQC,UAAS,UAAKC,IAAOO,KAAZ,YAAoBA,GAAQG,SAAUD,EAAWE,QAASH,GAAaV,GAAxF,eACIW,GAAa,mBAAGV,UAAS,UAAKC,IAAOK,MAAZ,YAAqBC,GAAjC,SAAgDD,GAASV,IACvEc,GAAa,cAAC,IAAD,CAAsBG,MAAOC,kBAAiBC,KAAM,W,gCCPxE,kEACe,SAASC,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC5C,OACE,cAAC,UAAD,CACEpB,aAAc,CACZqB,WAAW,GAAD,OAAKF,EAAL,MACVG,cAAc,GAAD,OAAKH,EAAL,MACbI,YAAY,GAAD,OAAKH,EAAL,MACXI,aAAa,GAAD,OAAKJ,EAAL,W,mBCPpBf,EAAOC,QAAU,CAAC,KAAO,eAAe,KAAO,eAAe,WAAa,qBAAqB,kBAAoB,8B,wWCSrG,SAASmB,EAAT,GAcX,IAGoBC,EAhBtBhB,EAaC,EAbDA,KACAiB,EAYC,EAZDA,KACAC,EAWC,EAXDA,MACAC,EAUC,EAVDA,aACAC,EASC,EATDA,cACAC,EAQC,EARDA,cACAC,EAOC,EAPDA,kBACAC,EAMC,EANDA,eACAC,EAKC,EALDA,cACAC,EAIC,EAJDA,mBACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACGpC,EACF,iBACKqC,EAAMC,mBAYZ,OACE,eAAC,UAAD,CAAMxC,MAAK,UAAKI,IAAOO,KAAZ,YAAoBA,GAA/B,UACG2B,GACC,qCACGA,EACD,cAAC,UAAD,CAAWjB,WAAY,OAG3B,mCACEkB,IAAKA,EACLE,KAAMV,EAAgB,WAAa,KACnCM,YAAaA,EACbR,MAAOA,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAAaa,EAAMC,OAAOf,QAC7C1B,UAAS,UAAKC,IAAOwB,KAAZ,YAAoBA,IACzB1B,IAEN,eAAC,UAAD,CAAMF,MAAOI,IAAOyC,WAApB,UACGC,OAAOT,GAAaU,cAAcC,SAAS,aACb,qBAAtBf,GACL,cAAC,UAAD,CAAQtB,KAAMP,IAAO6C,kBAAmBrC,QAASoB,EAAjD,UA9BYL,EA+BKI,EA9BrBJ,EAEA,cAAC,IAAD,CAAMuB,KAAK,UAAUC,KAAK,UAAUnC,MAAOoC,cAAalC,KAAM,OAGzD,cAAC,IAAD,CAAMgC,KAAK,MAAMC,KAAK,UAAUnC,MAAOoC,cAAalC,KAAM,UA4BjC,qBAAtBe,GACN,cAAC,UAAD,CAAMjC,MAAOI,IAAO6C,kBAApB,SACE,cAAC,IAAD,CACEjC,MAAOkB,EACPmB,UAAWjB,EACXlB,KAAMiB,EACNmB,SAAUrB","file":"static/js/3.3baf5212.chunk.js","sourcesContent":["import styles from './.module.css';\r\nexport default function View({children, style, defaultStyle, ...props}) {\r\n  return (\r\n    <div className={`${style} ${styles.view}`} style={defaultStyle} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"_view__1rEon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skin\":\"_skin__16GE0\",\"title\":\"_title__3pIjD\"};","import styles from './.module.css';\r\nimport * as Progress from 'components/Progress';\r\nimport {backgroundColor} from 'constants/styles';\r\nexport default function Button({children, title, titleStyle, skin, onPress, isLoading, ...props}) {\r\n  return (\r\n    <button className={`${styles.skin} ${skin}`} disabled={isLoading} onClick={onPress} {...props}>\r\n      {!isLoading && <p className={`${styles.title} ${titleStyle}`}>{title || children}</p>}\r\n      {isLoading && <Progress.CircleSnail color={backgroundColor} size={20} />}\r\n    </button>\r\n  );\r\n}\r\n","import View from 'components/View';\r\nexport default function Separator({ vertical, horizontal }) {\r\n  return (\r\n    <View\r\n      defaultStyle={{\r\n        paddingTop: `${vertical}px`,\r\n        paddingBottom: `${vertical}px`,\r\n        paddingLeft: `${horizontal}px`,\r\n        paddingRight: `${horizontal}px`,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skin\":\"_skin__2E0p6\",\"body\":\"_body__11Mwu\",\"suffixPane\":\"_suffixPane__38XoK\",\"buttonEncryptText\":\"_buttonEncryptText__3_wOS\"};","import View from 'components/View';\r\nimport styles from './.module.css';\r\nimport Button from 'components/Button';\r\nimport Separator from 'components/Separator';\r\nimport * as Progress from 'components/Progress';\r\n\r\nimport Icon from 'react-web-vector-icons';\r\nimport {accentColor} from 'constants/styles';\r\nimport {useRef} from 'react';\r\n\r\nexport default function TextInput({\r\n  skin,\r\n  body,\r\n  value,\r\n  onChangeText,\r\n  isTextEncrypt,\r\n  onEncryptText,\r\n  indicatorProgress,\r\n  indicatorColor,\r\n  indicatorSize,\r\n  indicatorThickness,\r\n  placeholder,\r\n  prefixIcon,\r\n  ...props\r\n}) {\r\n  const ref = useRef();\r\n\r\n  const isEncryptText = status => {\r\n    if (status) {\r\n      return (\r\n        <Icon name='eye-off' font='Feather' color={accentColor} size={17.5} />\r\n      );\r\n    } else {\r\n      return <Icon name='eye' font='Feather' color={accentColor} size={17.5} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={`${styles.skin} ${skin}`}>\r\n      {prefixIcon && (\r\n        <>\r\n          {prefixIcon}\r\n          <Separator horizontal={5} />\r\n        </>\r\n      )}\r\n      <input\r\n        ref={ref}\r\n        type={isTextEncrypt ? 'password' : null}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={event => onChangeText(event.target.value)}\r\n        className={`${styles.body} ${body}`}\r\n        {...props}\r\n      />\r\n      <View style={styles.suffixPane}>\r\n        {String(placeholder).toLowerCase().includes('password') &&\r\n          typeof indicatorProgress === 'undefined' && (\r\n            <Button skin={styles.buttonEncryptText} onPress={onEncryptText}>\r\n              {isEncryptText(isTextEncrypt)}\r\n            </Button>\r\n          )}\r\n        {typeof indicatorProgress !== 'undefined' && (\r\n          <View style={styles.buttonEncryptText}>\r\n            <Progress.Circle\r\n              color={indicatorColor}\r\n              thickness={indicatorThickness}\r\n              size={indicatorSize}\r\n              progress={indicatorProgress}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"sourceRoot":""}